---
layout: post
title:  "Droopy 0.2 writeup"
date:   2017-05-04 13:33:27 +0100
categories: jekyll update
---

[Download this box on VulnHub](https://www.vulnhub.com/entry/droopy-v02,143/)

Lets do an NMap scan on the IP to start. It seems to be running Drupal which I'm unfamilar with. Lets continue with enumeration for now though.
![Nmap screenshot]({{ site.url }}/assets/droopy/nmap.PNG)

Visting the server in browser I can see a login.
![Site screenshot]({{ site.url }}/assets/droopy/site.PNG)

Then checking out robots.txt, which is full of stuff, searched through some of them.
![Robots screenshot]({{ site.url }}/assets/droopy/robots.png)

Running a nikto scan on the site. It finds tons of stuff exposed. I search for exploits for that version of Apache just to check, but nothing returns that will help use start a shell.
![Nikto screenshot]({{ site.url }}/assets/droopy/nikto1.PNG)
![Nikto screenshot]({{ site.url }}/assets/droopy/nikto2.PNG)

Then quickly try dirb for good luck.
![Dirb screenshot]({{ site.url }}/assets/droopy/dirb.PNG)

I accidentally stumbled on this, not terribly useful but at least we know the path on the box the server is serving content from as well as the PHP version. I tried looking for a PHP exploit but nothing stood out immediately to me. 
![info screenshot]({{ site.url }}/assets/droopy/info.PNG)
![info screenshot]({{ site.url }}/assets/droopy/info2.PNG)


Using searchsploit I check out an exploit for the Drupal version. Running it works! We've got an admin account, logging in works. (Just as a note, I came back to this box a couple days later and reran this, so some screenshots might have a different admin user, first rule of CTF, forget admin credentials as soon as you get them.)
![searchsploit screenshot]({{ site.url }}/assets/droopy/searchsploit.PNG)
![credentials screenshot]({{ site.url }}/assets/droopy/credentials.PNG)
![admin screenshot]({{ site.url }}/assets/droopy/admin.PNG)

I try a few different things in the admin section, including a lfi attempt, a bit hopeful but it was worth trying..
![lfi attempt  screenshot]({{ site.url }}/assets/droopy/lfiattempt.PNG)

I enable the PHP module, turn on the ability to exec php, make a new post and fill the body with a php reverse shell, save it as PHP and refresh, we got a reverse shell. I can't access any pages in browser anymore (oops) but oh well. Called python to get a nicer shell up. (python -c 'import pty; pty.spawn("/bin/sh")'), but I was in and out of meterpeter that most of these screenshots will just be plain old  ugly shell.
![info screenshot]({{ site.url }}/assets/droopy/meterpreter.PNG)

I explore around, the user we're on seems to be pretty locked down. I checked bashrc and the usual places too, but nothing. I stumble on this email, which is what one of the hints was getting at I think. This is a big clue.
![wwwdata screenshot]({{ site.url }}/assets/droopy/wwwdata.PNG)

N.B: at some point around now I  also found a settings file in the webserver with sql credentials, found a hash and went on a wild goose chase for a while, but I eventually gave up on this.

Looking for ways to escalate privileges to see where this encrypted file they were talking about is, I check the kernel version with "uname -a" and then search for an exploit, I try the SGID priv escalation [CVE-2014-4014](https://www.exploit-db.com/exploits/33824/). I couldn't find anywhere I could write to, but I try /tmp/ and it works. GCC worked so I compiled the binary, marked it as executable and ran it. No luck, not really sure why it didn't work, I guess the specific version of the 3.13 kernel was patched.  I searched around for quite a while before trying an exploit for [CVE-2015-1328](https://www.exploit-db.com/exploits/37292/). I did the same thing, uploading it via the meterpreter session, compiling, marking it as executable and running it. This time it worked. Rooted.

![Esc screenshot]({{ site.url }}/assets/droopy/esc.PNG)
![Root screenshot]({{ site.url }}/assets/droopy/root.PNG)

Now lets go into /root/. There's a truecrypt file which is likely what the email earlier was talking about. Can't download it via meterpreter since we're a shell within the shell in the meterpreter session (I think? Who knows) but putting it /var/www/html/ and downloading it in browser works fine.
![Dave.tc screenshot]({{ site.url }}/assets/droopy/dave.tc.PNG)
Installing truecrypt, deprecated software = best software.

I thought about bruteforcing it, but thought there had to be an easier way to do it. After doing a bit of research on wikipedia around some of the clues in the email, I thought Dave was supposed to be Dave Waller of the Jam. I found out his school was Sheerwater Secondary Modern School. I tried combinations of that, but no luck. Then reread the last line, thought it must be mentioned in a specific song. After reading way too many song lyrics/titles for mentions of schools and universities I found [this](https://en.wikipedia.org/wiki/The_Eton_Rifles)

I tried eton, etoncollege, and other variations before finally etonacademy. It worked, I'm in.
![Truecrypt screenshot]({{ site.url }}/assets/droopy/truecrypt.PNG)

Searching around, there's a hidden folder in another hidden folder containg flag.txt. Done.
![Done screenshot]({{ site.url }}/assets/droopy/done.PNG)

Takeaways: learned of some common kernel exploits for priv escalation, fun fun.

